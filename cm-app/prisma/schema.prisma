// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  userId   String  @unique
  email    String  @unique
  name     String?
  imageUrl String?

  tests            TypingTest[]
  userAchievements UserAchievement[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TypingTest {
  id          String @id @default(uuid())
  userId      String
  wpm         Int
  accuracy    Float
  timeLimit   Int
  passageType String

  completedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, completedAt])
}

model Achievement {
  id          String @id @default(uuid())
  title       String @unique
  description String
  icon        String
  category    String
  condition   Json

  createdAt DateTime @default(now())

  userAchievements UserAchievement[]

  @@index([title])
}

model UserAchievement {
  id            String   @id @default(uuid())
  userId        String
  achievementId String
  unlockedAt    DateTime @default(now())
  progress      Json?

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  achievement Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)

  @@unique([userId, achievementId])
}
